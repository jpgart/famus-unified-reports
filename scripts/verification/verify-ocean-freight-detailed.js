const { analyzeSpecificChargeFromEmbedded } = require('./src/data/costDataEmbedded.js');

async function verifyOceanFreightDetailed() {
  console.log('üö¢ VERIFICACI√ìN DETALLADA: OCEAN FREIGHT ANALYSIS');
  console.log('================================================\n');
  
  try {
    // Analizar Ocean Freight
    console.log('üìä Analizando datos de Ocean Freight...');
    const oceanFreightAnalysis = await analyzeSpecificChargeFromEmbedded('OCEAN FREIGHT', 'Ocean Freight');
    
    if (!oceanFreightAnalysis) {
      console.error('‚ùå No se pudieron obtener datos de Ocean Freight');
      return;
    }
    
    console.log('\nüîç DETALLES COMPLETOS DE OCEAN FREIGHT:');
    console.log('=======================================');
    
    // KPIs principales
    console.log('\nüìà KPIs PRINCIPALES:');
    console.log(`   üí∞ Total Amount: $${oceanFreightAnalysis.analysis?.totalAmount?.toLocaleString() || oceanFreightAnalysis.summary?.totalAmount?.toLocaleString() || 'N/A'}`);
    console.log(`   üì¶ Avg per Box: $${oceanFreightAnalysis.summary?.avgPerBox?.toFixed(4) || 'N/A'}`);
    console.log(`   üè¢ Exporters: ${Object.keys(oceanFreightAnalysis.byExporter || {}).length || 0}`);
    console.log(`   ‚ö†Ô∏è  Outliers: ${oceanFreightAnalysis.outliers?.length || 0}`);
    
    // Detalles del summary para la tabla
    console.log('\nüìä DATOS PARA TABLA (Summary):');
    console.log(`   ‚úÖ Summary data disponible: ${oceanFreightAnalysis.summary ? 'S√≠' : 'No'}`);
    if (oceanFreightAnalysis.summary) {
      console.log(`      - Total Amount: $${oceanFreightAnalysis.summary.totalAmount?.toLocaleString() || 'N/A'}`);
      console.log(`      - Avg per Box: $${oceanFreightAnalysis.summary.avgPerBox?.toFixed(4) || 'N/A'}`);
      console.log(`      - Lots with Charge: ${oceanFreightAnalysis.summary.lotsWithCharge || 'N/A'}`);
      console.log(`      - Total Records: ${oceanFreightAnalysis.summary.totalRecords || 'N/A'}`);
    } else {
      console.log('   ‚ùå No hay datos en summary para la tabla');
    }
    
    // Detalles de los exporters para gr√°ficos
    console.log('\nüìà DATOS PARA GR√ÅFICOS (By Exporter):');
    if (oceanFreightAnalysis.byExporter && Object.keys(oceanFreightAnalysis.byExporter).length > 0) {
      console.log(`   ‚úÖ Exportadores: ${Object.keys(oceanFreightAnalysis.byExporter).length}`);
      
      Object.entries(oceanFreightAnalysis.byExporter).forEach(([exporter, data]) => {
        console.log(`      üè¢ ${exporter}:`);
        console.log(`         - Total Amount: $${data.totalAmount?.toLocaleString() || 'N/A'}`);
        console.log(`         - Lots: ${data.lots || 0}`);
        console.log(`         - Total Boxes: ${data.totalBoxes?.toLocaleString() || 'N/A'}`);
        console.log(`         - Avg per Box: $${data.avgPerBox?.toFixed(4) || 'N/A'}`);
      });
    } else {
      console.log('   ‚ùå No hay datos por exportador para gr√°ficos');
    }
    
    // Verificar outliers
    console.log('\n‚ö†Ô∏è  OUTLIERS (para alertas):');
    if (oceanFreightAnalysis.outliers && oceanFreightAnalysis.outliers.length > 0) {
      console.log(`   ‚úÖ Outliers detectados: ${oceanFreightAnalysis.outliers.length}`);
      
      console.log('\n   üö® Top 5 outliers:');
      oceanFreightAnalysis.outliers.slice(0, 5).forEach((outlier, index) => {
        console.log(`      ${index + 1}. ${outlier.lotid} (${outlier.exporter}): $${outlier.totalCharge?.toFixed(2) || 'N/A'} total`);
      });
    } else {
      console.log('   ‚ÑπÔ∏è  No hay outliers detectados');
    }
    
    // Resumen final
    console.log('\nüéØ RESUMEN DE VERIFICACI√ìN OCEAN FREIGHT:');
    console.log('=========================================');
    
    const checks = {
      'KPIs calculados': !!(oceanFreightAnalysis.analysis?.totalAmount && oceanFreightAnalysis.summary?.avgPerBox),
      'Datos para tabla disponibles': oceanFreightAnalysis.summary && Object.keys(oceanFreightAnalysis.summary).length > 0,
      'Datos para gr√°ficos disponibles': oceanFreightAnalysis.byExporter && Object.keys(oceanFreightAnalysis.byExporter).length > 0,
      'Exporters identificados': oceanFreightAnalysis.byExporter && Object.keys(oceanFreightAnalysis.byExporter).length > 0,
      'Outliers procesados': oceanFreightAnalysis.outliers !== undefined
    };
    
    Object.entries(checks).forEach(([check, passed]) => {
      console.log(`   ${passed ? '‚úÖ' : '‚ùå'} ${check}`);
    });
    
    const allPassed = Object.values(checks).every(check => check === true);
    
    console.log(''); // Add blank line
    
    if (allPassed) {
      console.log('üéâ ¬°OCEAN FREIGHT ANALYSIS EST√Å 100% FUNCIONAL!');
      console.log('   ‚úÖ Todos los KPIs se calcular√°n correctamente');
      console.log('   ‚úÖ La tabla mostrar√° datos completos');
      console.log('   ‚úÖ Los gr√°ficos tendr√°n informaci√≥n v√°lida');
      console.log('   ‚úÖ Los outliers se mostrar√°n si existen');
    } else {
      console.log('‚ùå Hay problemas en Ocean Freight Analysis que requieren atenci√≥n');
    }
    
  } catch (error) {
    console.error('‚ùå Error durante la verificaci√≥n:', error.message);
    console.error('Stack:', error.stack);
  }
}

// Ejecutar verificaci√≥n
verifyOceanFreightDetailed();
